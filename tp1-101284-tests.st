TestCase subclass: #TestListaBurbujas	instanceVariableNames: 'burbujas burbuja1 burbuja2 burbuja3 persona1 persona2 persona3 sintoma1 sintoma2 sintoma3 nommre1 nombre1 nombre2 nombre3 nombreS1 nombreS2 nombreS3'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestListaBurbujas methodsFor: 'running' stamp: 'luciano 5/21/2021 20:19'!setUp	super setUp.	burbujas := ListaBurbujas new .		burbuja1 := Burbuja new .	burbuja2 := Burbuja new .	burbuja3 := Burbuja new .	nombre1 := Nombre new .	nombre1 asignar: 'B1' .	nombre2 := Nombre new .	nombre2 asignar: 'B2' .	nombre3 := Nombre new .	nombre3 asignar: 'B3' .	burbuja1 etiquetarComo: nombre1.	burbuja2 etiquetarComo: nombre2 .	burbuja3 etiquetarComo: nombre3  .		persona1 := Persona new .	persona2 := Persona new .	persona3 := Persona new .	persona1 seLlama: 'Luciano' .	persona2 seLlama: 'Emiliano' .	persona3 seLlama: 'Ivan' .		sintoma1 := Sintoma new .	sintoma2 := Sintoma new .	sintoma3 := Sintoma new .		nombreS1 := Nombre new .	nombreS1 asignar: 'Fiebre' .	nombreS2 := Nombre new .	nombreS2 asignar: 'tos' .	nombreS3 := Nombre new .	nombreS3 asignar: 'cansancio' .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 20:14'!test03SiBuscoUnaBurbujaPreviamenteAlmacenadaLaEncuentra	burbujas agregar: burbuja1 .			self shouldnt: [ burbujas hallar: nombre1 ] raise: ListaVaciaError .	self assert: ((burbujas hallar: nombre1 ) etiqueta cadena) equals: 'B1' asLowercase  .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 20:16'!test05SiAgregoUnaBurbujaConUnaEtiquetaPreviamenteAlmacenadaLevantaError	burbujas agregar: burbuja1 .		burbuja2 etiquetarComo: nombre1 .		self should: [ burbujas agregar: burbuja2 ] raise: BurbujaRepetidaError .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 07:05'!test01SiLaListaEstaVaciaYBuscoUnaBurbujaLevantaError			self should: [ burbujas hallar: 'B1' ] raise: ListaVaciaError .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 20:18'!test06SiSePinchaUnaBurbujaLaCantidadDeBurbujasPinchadasAumenta	burbujas agregar: burbuja1 .		burbujas agregar: burbuja2 .	self assert: (burbujas cantidadPinchadas ) equals: 0 .		sintoma1 nombre: nombreS1  .	sintoma2 nombre: nombreS2  .	sintoma3 nombre: nombreS3  .	persona1 agregarSintoma: sintoma1 .	persona1 agregarSintoma: sintoma2 .	persona1 agregarSintoma: sintoma3 .		self assert: persona1 esPositivx .		burbujas agregarA: persona1 aLaBurbuja: 'B2' . 	burbujas agregarA: persona2 aLaBurbuja: 'B2' .	self assert: burbuja2 exploto .	self assert: (burbujas cantidadPinchadas) equals: 1  .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 20:14'!test04SiBuscoUnaBurbujaQueNoFueAlmacenadaLevantaError	burbujas agregar: burbuja1 .			self assert: (burbujas cantidad ) equals: 1 . 	self should: [ burbujas hallar: nombre2 ] raise: BurbujaInexistenteError .! !!TestListaBurbujas methodsFor: 'tests' stamp: 'luciano 5/21/2021 07:07'!test02SiLaListaEstaVaciaYAgregoUnaBurbujaSuCantidadEsUno	burbujas agregar: burbuja1 .		self assert: (burbujas cantidad) equals: 1.	! !TestCase subclass: #TestsAlgoVid	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsAlgoVid methodsFor: 'running' stamp: 'luciano 5/21/2021 14:42'!setUp	algovid := AlgoVid new. "Aislamiento estricto por defecto"! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:58'!test03SiTieneDosSintomasOUnoEntoncesEsSospechosx  algovid nuevaPersona: 'Luciano'.  "Uno o dos síntomas lo hace sospechoso"   algovid agregarSintoma: 'Fiebre' a: 'Luciano'.  self assert: (algovid diagnosticoDe: 'Luciano') equals: 'Sospechosx'.   algovid agregarSintoma: 'Cansancio' a: 'Luciano'.  self assert: (algovid diagnosticoDe: 'Luciano') equals: 'Sospechosx'. ! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:42'!test08SiEsPersonalEsencialPeroTieneContactoEstrechoConUnCasoSospechosoNoPuedeCircular  algovid nuevaPersona: 'Diego'.   "Un síntoma lo hace sospechoso"  algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Sospechosx'.   algovid nuevaPersona: 'Edson'.  algovid esPersonalEsencial: 'Edson'.  algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:07'!test07SiEsPersonalEsencialSinContactoEstrechoConSospechosxsYPositivosPuedeCircular  algovid nuevaPersona: 'Luciano'.   algovid esPersonalEsencial: 'luciano'.	  self assert: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:59'!test04SiEsSospechosxNoPuedeCircular  algovid nuevaPersona: 'Tomás'.  algovid estaVacunadx: 'Tomás'.  "Tres síntomas, pero ningno habitual (fiebre, tos o cansancio) lo hace sospechoso"   algovid agregarSintoma: 'Dolor de garganta' a: 'Tomás'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Tomás'.  algovid agregarSintoma: 'Diarrea' a: 'Tomás'.	  self assert: (algovid diagnosticoDe: 'Tomás') equals: 'Sospechosx'.   self deny: (algovid puedeCircular: 'Tomás').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:15'!test02SiEstaVacunadxYNotieneSintomasPuedeCircular  algovid nuevaPersona: 'Luciano'.	self deny: (algovid puedeCircular: 'Luciano').  algovid estaVacunadx: 'Luciano'.  self assert: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:42'!test13SiAlguienEnLaBurbujaEsUnCasoConfirmadoEntoncesLaBurbujaEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Pablo'.  algovid agregarSintoma: 'Diarrea' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo3').   self deny: (algovid puedeCircular: 'Thiago').  self deny: (algovid puedeCircular: 'Santi').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:42'!test06SiEsConfirmadoDeCovidCon4SintomasNoPuedeCircular  algovid nuevaPersona: 'Carlos'.  algovid estaVacunadx: 'Carlos'.  "Cuatro síntomas o más lo hace confirmado"   algovid agregarSintoma: 'Dolor de garganta' a: 'Carlos'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Carlos'.  algovid agregarSintoma: 'Diarrea' a: 'Carlos'.  algovid agregarSintoma: 'Pérdida del gusto' a: 'Carlos'.	  self assert: (algovid diagnosticoDe: 'Carlos') equals: 'Positivo'.   self deny: (algovid puedeCircular: 'Carlos').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:15'!test12SiEstaVacunadxPeroEsSospechosxNoPuedeCircular	algovid nuevaPersona: 'Luciano'.	self deny: (algovid puedeCircular: 'Luciano'). 	algovid estaVacunadx: 'Luciano'.	self assert: (algovid puedeCircular: 'Luciano') .		algovid agregarSintoma: 'tos' a: 'Luciano'.	self deny: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:03'!test05SiTieneTresSintomasYAlMenosUnoHabitualEstaContagiadx  algovid nuevaPersona: 'Luciano'.  algovid estaVacunadx: 'Luciano'.   algovid agregarSintoma: 'Cansancio' a: 'Luciano'.  algovid agregarSintoma: 'Tos' a: 'luciano'.  algovid agregarSintoma: 'perdida de olfato' a: 'luciano'.	  self assert: (algovid diagnosticoDe: 'Luciano') equals: 'Positivo'.   self deny: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:18'!test15SiMenosDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesSonPresenciales	algovid nuevaPersona: 'Thiago'.	algovid nuevaPersona: 'Pablo'. 	algovid nuevaBurbuja: 'Ayudantes Algo3'.	algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.	algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.	algovid nuevaPersona: 'Martín'.	algovid nuevaPersona: 'Cami'.	algovid nuevaBurbuja: 'Ayudantes Algo2'.	algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.	algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.	algovid nuevaPersona: 'Diego'.	algovid nuevaPersona: 'Valen'.		algovid nuevaBurbuja: 'Ayudantes Algo1'.	algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.	algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.	algovid nuevoColegio: 'UBA'.	algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.	algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.	algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.	algovid agregarSintoma: 'Fiebre' a: 'Diego'.	algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.	algovid agregarSintoma: 'Tos' a: 'Diego'.		self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'. 	self assert: (algovid burbujaPinchada: 'Ayudantes Algo1'). 	self assert: (algovid clasesPresencialesEn: 'UBA').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:11'!test11SiPersonaDeRiesgoAunqueSeaEsencialNoPuedeCircular	algovid nuevaPersona: 'Luciano'. 	algovid esPersonalEsencial: 'Luciano'.	self assert: (algovid puedeCircular: 'Luciano') .	algovid esPersonaDeRiesgo: 'Luciano'.	self deny: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:19'!test16SiMasDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesNoSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Tos' a: 'Cami'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo2').   self deny: (algovid clasesPresencialesEn: 'UBA').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:42'!test14SiAlguienEnLaBurbujaEsUnCasoSospechosoEntoncesLaBurbujaNoEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Sospechosx'.   self deny: (algovid burbujaPinchada: 'Ayudantes Algo3').   self assert: (algovid puedeCircular: 'Thiago').  self assert: (algovid puedeCircular: 'Santi').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:59'!test03SiEstaVacunadxPeroTieneUnoODosSintomasEsSospechosx  algovid nuevaPersona: 'Luciano'.  algovid estaVacunadx: 'Luciano'.   algovid agregarSintoma: 'Fiebre' a: 'Luciano'.	  self assert: (algovid diagnosticoDe: 'Luciano') equals: 'Sospechosx'.   algovid agregarSintoma: 'Tos' a: 'Luciano' .  self assert: (algovid diagnosticoDe: 'Luciano') equals: 'Sospechosx'. ! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:08'!test10SiEsPersonaDeRiesgoAunqueEsteVacunadxNoPuedeCircular  algovid nuevaPersona: 'Luciano'.  algovid estaVacunadx: 'Luciano'.  algovid esPersonaDeRiesgo: 'LUCIANO'.  self deny: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:46'!test01PorDefectoNoPuedeSalir  algovid nuevaPersona: 'Luciano'.    self deny: (algovid puedeCircular: 'Luciano').! !!TestsAlgoVid methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:42'!test09SiEsPersonalEsencialPeroTieneContactoEstrechoConUnCasoPositivoNoPuedeCircular  algovid nuevaPersona: 'Diego'.  "Cuatro síntomas lo hace confirmado"   algovid esPersonalEsencial: 'Diego'.  algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Diarrea' a: 'Diego'.  algovid agregarSintoma: 'Pérdida del gusto' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   algovid nuevaPersona: 'Edson'.  algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').! !TestCase subclass: #TestsBurbuja	instanceVariableNames: 'burbuja persona1 persona2 sintoma1 sintoma2 sintoma3 burbuja2 nombreS1 nombreS2 nombreS3 nombreP1 nombreP2'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:32'!test06SiIntentoAgregarUnaPersonaYaRegistradaLevantaError	persona1 seLlama: 'Luciano'.	persona2 seLlama: 'Luciano'.		burbuja agregar: persona1.		self should: [ burbuja agregar: persona2 ] raise: PersonaRepetidaError .	! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:05'!test00SiDosBurbujasTienenMismaEtiquetaEntoncesSonIguales	burbuja etiquetarComo: 'B1'.	burbuja2 etiquetarComo: 'B1'.		self assert: burbuja = burbuja2 .! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:02'!test04SiUnaPersonaDeLaBurbujaEsSospechosxYNoHayContagiadxsEntoncesNoExplota	burbuja agregar: persona1 .	burbuja agregar: persona2 .		sintoma1 nombre: nombreS1  .	persona2 agregarSintoma: sintoma1 .	self deny: burbuja exploto .! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 05:42'!test02SiAgregoPersonasSanasNoSePincha	burbuja agregar: persona1 .	self assert: (persona1 estadoTesteo) equals: 'Defecto' .	self deny: burbuja exploto.	 ! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 20:02'!test05SiLaBurbujaExplotaEntoncesSusIntegrantesNoPuedenCircular	burbuja agregar: persona1 .	burbuja agregar: persona2 .		sintoma1 nombre: nombreS1  .	sintoma2 nombre: nombreS2  .	sintoma3 nombre: nombreS3  .	persona1 agregarSintoma: sintoma1 .	persona1 agregarSintoma: sintoma2 .	persona1 agregarSintoma: sintoma3 .		self assert: burbuja exploto .	self deny: (persona1 puedeCircular) .	self deny: (persona2 puedeCircular) .! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/19/2021 09:07'!test01InicialmenteNoEstaPinchada	self deny: burbuja estaPinchada .! !!TestsBurbuja methodsFor: 'tests' stamp: 'luciano 5/21/2021 15:33'!test03SiUnaPersonaDeLaBurbujaEsPositivxEntoncesExplota	burbuja agregar: persona1 .	burbuja agregar: persona2 .		persona1 seContagio .	self assert: burbuja exploto .! !!TestsBurbuja methodsFor: 'running' stamp: 'luciano 5/21/2021 20:20'!setUp	super setUp.	burbuja := Burbuja new .	burbuja2 := Burbuja new .	persona1 := Persona new .	persona2 := Persona new .	sintoma1 := Sintoma new .	sintoma2 := Sintoma new .	sintoma3 := Sintoma new .		nombreS1 := Nombre new .	nombreS1 asignar: 'fiebre' .	nombreS2 := Nombre new .	nombreS2 asignar: 'Perdida de olfato' .	nombreS3 := Nombre new .	nombreS3 asignar: 'dolor de cabeza' .		nombreP1 := Nombre new .	nombreP1 asignar: 'Luciano' .	nombreP2 := Nombre new .	nombreP2 asignar: 'Ivan' .		persona1 seLlama: nombreP1 .	persona2 seLlama: nombreP2 .! !TestCase subclass: #TestsColegio	instanceVariableNames: 'colegio burbuja1 burbuja2 burbuja3 persona1 persona2 persona3 sintoma1 sintoma2 sintoma3 nombreS1 nombreS2 nombreS3 nombreS4 nombreS5'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 04:01'!test04SiNoTieneBurbujasLaCantidadDeBurbujasPinchadasEsCero	"se instancia inicialmente vacío."	self assert: (colegio cantidadBurbujasPinchadas ) equals: 0. ! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 04:04'!test06SiTieneSoloBurbujasNoPinchadasElPorcentajeDeBurbujasPinchadasEsCero	"Las burbujas se instancian inicialmente en buenas condiciones sanitarias"	colegio agregar: burbuja1 .	colegio agregar: burbuja2 .	self assert: (colegio chequearPorcentajeBurbujasPinchadas ) equals: 0. ! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 22:17'!test08SiMenosDelCuarentaPorCientoDeLasBurbujasEstanPinchadasLasClasesSonPresenciales	"Las personas se instancian inicialmente sanas"	sintoma1 := Sintoma new .	sintoma2 := Sintoma new .	sintoma3 := Sintoma new .		nombreS1 := Nombre new .	nombreS1 asignar: 'fiebre' .	nombreS2 := Nombre new .	nombreS2 asignar: 'Perdida de olfato' .	nombreS3 := Nombre new .	nombreS3 asignar: 'dolor de cabeza' .	sintoma1 nombre: nombreS1 .	sintoma2 nombre: nombreS2 .	sintoma3 nombre: nombreS3 .	persona2 agregarSintoma: sintoma1.	persona2 agregarSintoma: sintoma2.	persona2 agregarSintoma: sintoma3.		colegio agregar: burbuja1 .	colegio agregar: burbuja2 .	colegio agregar: burbuja3 .		colegio agregarA: persona1 aLaBurbuja: burbuja1 .	colegio agregarA: persona2 aLaBurbuja: burbuja2 .	colegio agregarA: persona3 aLaBurbuja: burbuja3 .		self assert: burbuja2 exploto .	self assert:(colegio chequearPorcentajeBurbujasPinchadas) closeTo: 1/3 .	self assert: colegio hayClasesPresenciales .! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 04:08'!test07SiNoTieneBurbujasPinchadasLasClasesSonPresenciales	colegio agregar: burbuja1 .	colegio agregar: burbuja2 .		self assert: colegio hayClasesPresenciales .! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:55'!test01SiAgregoBurbujasDiferentesLaCantidadDeBurbujasAumenta	colegio agregar: burbuja1 .	self assert: (colegio cantidadBurbujas ) equals: 1.		colegio agregar: burbuja2 .	self assert: (colegio cantidadBurbujas) equals: 2. ! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:57'!test02SiAgregoUnaBurbujaExistenteLevantaError	colegio agregar: burbuja1 .	self assert: (colegio cantidadBurbujas ) equals: 1.		burbuja2 etiquetarComo: burbuja1 etiqueta .	self should: [ colegio agregar: burbuja2  ] raise: BurbujaRepetidaError .	self assert: (colegio cantidadBurbujas ) equals: 1. ! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 04:02'!test05SiNoTieneBurbujasElPorcentajeDeBurbujasPinchadasEsCero	"se instancia inicialmente vacío."	self assert: (colegio chequearPorcentajeBurbujasPinchadas ) equals: 0. ! !!TestsColegio methodsFor: 'tests' stamp: 'luciano 5/21/2021 04:00'!test03SiNoTieneBurbujasLaCantidadQueDevuelveEsCero	"se instancia inicialmente vacío."	self assert: (colegio cantidadBurbujas ) equals: 0. ! !!TestsColegio methodsFor: 'running' stamp: 'luciano 5/21/2021 04:22'!setUp	super setUp .	colegio := Colegio new .	colegio seLlama: 'FIUBA' .		burbuja1 := Burbuja new .	burbuja2 := Burbuja new .	burbuja3 := Burbuja new .	burbuja1 etiquetarComo: 'B1' .	burbuja2 etiquetarComo: 'B2' .	burbuja3 etiquetarComo: 'B3' .		persona1 := Persona new .	persona2 := Persona new .	persona3 := Persona new .	persona1 seLlama: 'Luciano' .	persona2 seLlama: 'Emiliano' .	persona3 seLlama: 'Ivan' .		sintoma1 := Sintoma new .	sintoma2 := Sintoma new .	sintoma3 := Sintoma new .! !TestCase subclass: #TestsListaPersonas	instanceVariableNames: 'lista persona1 persona2'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 00:58'!test03SiEstaVaciaNoDebeHallarANingunaPersonaBuscada	self should: [ lista hallar: 'Luciano' ] raise: ListaVaciaError .! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:23'!test04SiEstaVaciaNoSePuedenAgregarSintomas	self should: [lista agregarSintoma: 'Fiebre' a: 'unapersona' ] raise: ListaVaciaError  .! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:27'!test07SiIntentoAgregarUnSintomaAUnaPersonaQueNoEstaDevuelveError	|sintoma|	sintoma := Sintoma new .	sintoma nombre: 'Fiebre' .		persona1 seLlama: 'Luciano' .	lista agregar: persona1 .	self should: [ lista agregarSintoma: sintoma a: 'Ivan'] raise: PersonaInexistenteError . ! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:23'!test06SiBuscoUnaPersonaQueNoEstaEnLaListaDevuelveError	persona1 seLlama: 'Emiliano' .	lista agregar: persona1 .	self assert: (lista cantidad) equals: 1 . 	self shouldnt: [lista hallar: 'Emiliano'] raise: PersonaInexistenteError .	self should: [lista hallar: 'Luciano'] raise: PersonaInexistenteError .! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 17:57'!test02SiEstaVaciaNoHayContagiadxs	"La lista se instancia vacía."	self assert: lista obtenerContagiadxs cantidad equals: 0 .! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 18:14'!test01SiEstaVaciaNoHaySospechosxs	"La lista se instancia vacía."	self assert: lista obtenerSospechosxs cantidad equals: 0 .! !!TestsListaPersonas methodsFor: 'tests' stamp: 'luciano 5/21/2021 03:23'!test05SiUnaPersonaYaEstaEnLaListaEntoncesNoSePuedeVolverAAgregar	persona1 seLlama: 'Luciano' .	persona2 seLlama: 'Luciano' .	self assert: lista vacia .	lista agregar: persona1 .	self assert: (lista cantidad) equals: 1 .	self should: [lista agregar: persona2 ] raise: PersonaRepetidaError .	self assert: (lista cantidad) equals: 1 .! !!TestsListaPersonas methodsFor: 'running' stamp: 'luciano 5/20/2021 17:13'!setUp	super setUp.	lista := ListaPersonas new .	persona1 := Persona new .	persona2 := Persona new .! !TestCase subclass: #TestsListaSintomas	instanceVariableNames: 'lista sintoma1 sintoma2'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:21'!test05SiNoEstaVaciaYBuscoUnSintomaQueNoEstaEnLaListaEntoncesLevantaError	sintoma1 nombre: 'tos'.	lista agregar: sintoma1 .	self should: [ lista hallar: 'fiebre' ] raise: SintomaNoEncontrado   .! !!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:16'!test02SiBuscoUnSintomaYLaListaEstaVaciaLevantaError	self should: [ lista hallar: 'fiebre' ] raise: ListaVaciaError  .! !!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:14'!test01SiEstaVaciaLaCantidadEsCero	self assert: lista cantidad equals: 0.! !!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:22'!test04SiEstaVaciaYAgregoUnSintomaSuCantidadAumenta	lista agregar: sintoma1 .	self assert: lista cantidad equals: 1 .! !!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:34'!test06SiAgregoUnSintomaQueYaEstaEntoncesLevantaError	sintoma1 nombre: 'tos' .	sintoma2 nombre: 'tos' .	lista agregar: sintoma1 .	self assert: lista cantidad equals: 1 .		self should: [ lista agregar: sintoma2 ] raise: SintomaRepetidoError .! !!TestsListaSintomas methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:40'!test03SiNoEstaVaciaYBuscoUnSintomaQueNoEstaEnLaListaEntoncesLevantaError	sintoma1 nombre: 'tos' .	lista agregar: sintoma1 .		self should: [ lista hallar: 'fiebre' ] raise: SintomaNoEncontrado   .! !!TestsListaSintomas methodsFor: 'running' stamp: 'luciano 5/21/2021 14:13'!setUp	super setUp.	lista := ListaSintomas new .	sintoma1 := Sintoma new .	sintoma2 := Sintoma new .! !TestCase subclass: #TestsPersona	instanceVariableNames: 'sujeto esencial vinculo1 vinculo2 sintoma1 sintoma2 sintoma3 sintoma4 nombreS1 nombreS2 nombreS3 nombreS4 nombreS5'	classVariableNames: ''	package: 'tp1-101284-tests'!!TestsPersona methodsFor: 'running' stamp: 'luciano 5/21/2021 21:06'!setUp	super setUp .	sujeto := Persona new .	esencial := Persona new .	esencial esEsencial: true .	vinculo1 := Persona new .	vinculo1 seLlama: 'Luciano' .	vinculo2 := Persona new .	vinculo2  seLlama: 'Ivan' .	sintoma1 := Sintoma new .	sintoma2 := Sintoma new .	sintoma3 := Sintoma new .	sintoma4 := Sintoma new .		nombreS1 := Nombre new .	nombreS1 asignar: 'fiebre' .	nombreS2 := Nombre new .	nombreS2 asignar: 'Perdida de olfato' .	nombreS3 := Nombre new .	nombreS3 asignar: 'dolor de cabeza' .	nombreS4 := Nombre new .	nombreS4 asignar: 'Perdida de gusto' .	nombreS5 := Nombre new .	nombreS5 asignar: 'Diarrea' .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/18/2021 19:04'!test03SiNoEstaVacunadxYNoEsEsencialNoPuedeCircular	self deny: (sujeto esEsencial).	self deny: sujeto estaVacunadx .	self deny: (sujeto puedeCircular).! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 05:54'!test02SiRecibeLaVacunaCambiaDeEstadoYPuedeCircular	"inicialmente no esta vacunadx"	self deny: (sujeto estaVacunadx) .		"Ahora recibe la vacuna"	sujeto recibirVacuna .	self assert: sujeto estaVacunadx .	self assert: sujeto puedeCircular .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/20/2021 08:36'!test10SiSeJuntaConAlguienLaListaDeContactosEstrechosAumenta	self assert: sujeto contactosRecientes vacia .		sujeto seJuntoCon: vinculo1 .	self deny: sujeto contactosRecientes vacia .		sujeto seJuntoCon: vinculo2 .	self assert: (sujeto contactosRecientes cantidad) equals: 2 . ! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/18/2021 17:21'!test01InicialmenteNoPuedeCircular	self deny: (sujeto puedeCircular) .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/18/2021 19:46'!test09SiEsPersonalEsencialPuedeCircular	self assert: esencial esEsencial .	self assert: esencial puedeCircular .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:04'!test04SiTieneAlMenosUnSintomaEsSospechoso	sintoma1 nombre: nombreS1.	sujeto agregarSintoma: sintoma1 .	self assert: (sujeto estadoTesteo) equals: 'Sospechosx' .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:05'!test07SiTieneMasDeDosSintomasYAlMenosUnoHabitualEntoncesEsPositivo	sintoma1 nombre: nombreS1  .	sintoma2 nombre: nombreS2  .	sintoma3 nombre: nombreS3  .		sujeto agregarSintoma: sintoma1 .	sujeto agregarSintoma: sintoma2 .	self assert: (sujeto estadoTesteo) equals: 'Sospechosx' .		sujeto agregarSintoma: sintoma3 .	self assert: (sujeto estadoTesteo) equals: 'Positivo' .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:07'!test11SiEsEsencialPeroTieneContactoEstrechoConUnSospechosoNoPuedeCircular	esencial seJuntoCon: vinculo1 .	self assert: esencial puedeCircular .	self assert: esencial contactosRecientes sinSospechosxs  .		sintoma1 nombre: nombreS1  .	vinculo1 agregarSintoma: sintoma1.		self assert: (esencial contactosRecientes obtenerSospechosxs cantidad) equals: 1 .	self assert: (vinculo1 estadoTesteo) equals: 'Sospechosx'.	self deny: esencial puedeCircular . ! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 14:08'!test00SiDosNombresCoincidenEntoncesAmbasPersonasSonIguales	sujeto seLlama: 'persona1'.	vinculo1 seLlama: 'persona1'.		self assert: sujeto = vinculo1 .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:04'!test06SEsSospechosxNoPuedeCircular	sintoma1 nombre: nombreS1  .	sujeto agregarSintoma: sintoma1 .	self assert: (sujeto estadoTesteo) equals: 'Sospechosx' .	self deny: sujeto puedeCircular .! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 21:04'!test05SiTieneDosOMasSintomasEsSospechosx	sintoma1 nombre: nombreS1 .	sintoma2 nombre: nombreS2  .	sujeto agregarSintoma: sintoma1 .	sujeto agregarSintoma: sintoma2 .		self assert: sujeto esSospechosx.	self assert: (sujeto estadoTesteo) equals: 'Sospechosx' . ! !!TestsPersona methodsFor: 'tests' stamp: 'luciano 5/21/2021 16:54'!test12SiEsPersonaDeRiesgoEntoncesNoPuedeCircular	sujeto esPersonaDeRiesgo .	self deny: sujeto puedeCircular.! !!TestsPersona methodsFor: 'as yet unclassified' stamp: 'luciano 5/21/2021 21:07'!test08SiTieneMasDeTresSintomasCualesquieraEntoncesEsCovidPositivo	sintoma1 nombre: nombreS2 .	sintoma2 nombre: nombreS3 .	sintoma3 nombre: nombreS4 .	sintoma4 nombre: nombreS5 .		sujeto agregarSintoma: sintoma1 .	sujeto agregarSintoma: sintoma2 .	sujeto agregarSintoma: sintoma3 .	sujeto agregarSintoma: sintoma4 .		self assert: (sujeto estadoTesteo) equals: 'Positivo'.! !